{"version":3,"sources":["logo.svg","component/NavBar/Navbar.js","component/MediaCard/MediaCard.js","component/CardList/CardList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","padding","transition","transitions","create","NavBar","onSearchChange","classes","className","AppBar","Toolbar","IconButton","edge","aria-label","Typography","variant","noWrap","InputBase","placeholder","onChange","input","inputProps","card","maxWidth","margin","media","MediaCard","props","Card","CardActionArea","CardMedia","image","img","CardContent","gutterBottom","component","desc","CardActions","Button","size","CardList","houses","console","log","map","element","key","name","houseToRent","available","App","state","event","setState","target","value","this","actualHouses","filter","house","toLowerCase","includes","Navbar","length","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f6fe04c3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(1),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        width: theme.spacing(7),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 7),\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: 120,\n            '&:focus': {\n                width: 200,\n            },\n        },\n    },\n}));\n\nconst NavBar = ({ onSearchChange }) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        className={classes.menuButton}\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\n                        Material-UI\n          </Typography>\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <InputBase\n                            placeholder=\"Searchâ€¦\"\n                            onChange={onSearchChange}\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                            inputProps={{ 'aria-label': 'search' }}\n                        />\n                    </div>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n\nexport default NavBar;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n    card: {\n        maxWidth: 345,\n        margin: \"1em\"\n    },\n    media: {\n        height: 140,\n    },\n});\n\nfunction MediaCard(props) {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.card}>\n            <CardActionArea>\n                <CardMedia\n                    className={classes.media}\n                    image={props.img}\n                    title={props.title}\n                />\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {props.title}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {props.desc}\n                    </Typography>\n                </CardContent>\n            </CardActionArea>\n            <CardActions>\n                <Button size=\"small\" color=\"primary\">\n                    Share\n        </Button>\n                <Button size=\"small\" color=\"primary\">\n                    Learn More\n        </Button>\n            </CardActions>\n        </Card>\n    );\n}\nexport default MediaCard;","import React, { Component } from 'react'\nimport MediaCard from '../MediaCard/MediaCard';\n\nconst CardList = ({ houses, search }) => {\n    console.log(houses)\n    return (\n        <div className=\"cards\">\n            {houses.map((element, key) => {\n                return (<MediaCard desc={element.desc} title={element.name} img={element.img} key={key} />)\n            })\n            }\n        </div>\n    )\n\n}\nexport default CardList;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Navbar from './component/NavBar/Navbar';\nimport CardList from './component/CardList/CardList';\n\nconst houseToRent = [\n  {\n    name: \"Tiny House refuge\",\n    desc: \"This is the perfect house for you, come to visit it you'll love it \",\n    img: \"https://cdn.wohnglueck.de/vary/content/2019/09/Tiny-House-Resort-Tinyhousedesign_content-1400x788@2x.jpg\",\n    available: true\n  },\n  {\n    name: \"Beautiful design house\",\n    desc: \"This is the perfect house for you, come to visit it you'll love it \",\n    img: \"https://images.adsttc.com/media/images/5de3/1ca6/3312/fda8/2a00/00b3/newsletter/001.jpg?1575165037\",\n    available: true\n  },\n  {\n    name: \"Beautiful House \",\n    desc: \"This is the perfect house for you, come to visit it you'll love it \",\n    img: \"https://images.adsttc.com/media/images/5be9/fd5c/08a5/e5a5/8c00/008f/newsletter/CARLES_FAUS_ARQUITECTURA_-_CARMEN_HOUSE_(2).jpg?1542061390\",\n    available: true\n  },\n  {\n    name: \"My super house \",\n    desc: \"This is the perfect house for you, come to visit it you'll love it \",\n    img: \"https://specials-images.forbesimg.com/imageserve/1026205392/960x0.jpg?fit=scale\",\n    available: true\n  },\n\n]\n\nclass App extends React.Component {\n  state = {\n    search: '',\n    houses: []\n  }\n\n  componentDidMount() {\n    this.setState({\n      houses: houseToRent\n    })\n  }\n  onSearchChange = (event) => {\n    this.setState({\n      search: event.target.value\n    })\n  }\n\n\n  render() {\n    const { houses, search } = this.state;\n    const actualHouses = houses.filter(house => house.name.toLowerCase().includes(search.toLowerCase()))\n    return (\n      <div className=\"App\" >\n        <Navbar\n          onSearchChange={this.onSearchChange}\n        />\n        {houses.length === 0 ? <h1>No result...</h1> : <h1>Here your houses</h1>}\n        <CardList\n          houses={actualHouses}\n          search={search}\n        />\n      </div >\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}